// <auto-generated />
using System;
using DataEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataEF.Migrations
{
    [DbContext(typeof(MusicDataContext))]
    partial class MusicDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Data.Entities.DataAlbum", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataArtistArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Licence")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Review")
                        .HasColumnType("TEXT");

                    b.HasKey("AlbumId");

                    b.HasIndex("DataArtistArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Data.Entities.DataArtist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Data.Entities.DataRating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataAlbumAlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataSongSongId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("RatingId");

                    b.HasIndex("DataAlbumAlbumId");

                    b.HasIndex("DataSongSongId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Data.Entities.DataSong", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DataAlbumAlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Popularity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("SongId");

                    b.HasIndex("DataAlbumAlbumId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("Data.Entities.DataAlbum", b =>
                {
                    b.HasOne("Data.Entities.DataArtist", null)
                        .WithMany("Albums")
                        .HasForeignKey("DataArtistArtistId");
                });

            modelBuilder.Entity("Data.Entities.DataRating", b =>
                {
                    b.HasOne("Data.Entities.DataAlbum", null)
                        .WithMany("Ratings")
                        .HasForeignKey("DataAlbumAlbumId");

                    b.HasOne("Data.Entities.DataSong", null)
                        .WithMany("Ratings")
                        .HasForeignKey("DataSongSongId");
                });

            modelBuilder.Entity("Data.Entities.DataSong", b =>
                {
                    b.HasOne("Data.Entities.DataAlbum", null)
                        .WithMany("Songs")
                        .HasForeignKey("DataAlbumAlbumId");
                });

            modelBuilder.Entity("Data.Entities.DataAlbum", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Entities.DataArtist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Data.Entities.DataSong", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
